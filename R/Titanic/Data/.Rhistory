library(ggplot2)
ufo<-read.delim("data/ufo/ufo_awesome.tsv", sep="\t", stringsAsFactors=FALSE,
header=FALSE, na.strings="")
ufo<-read.delim("data/ufo_awesome.tsv", sep="\t", stringsAsFactors=FALSE, header=FALSE, na.strings="")
head(ufo)
tail(ufo)
names(ufo)<-c("DateOccurred","DateReported","Location","ShortDescription",
"Duration","LongDescription")
2+2
x<- 2+2
x
DavidBowie<-c("David", "Bowie")
DavidBowie
2+2
2+2
2+2
2+2
install.package("ggplot2")
install.packages("ggplot2")
metallicaNames<-c("Lars","James","Kirk","Rob")
metallicaAges<-c(47, 47, 48, 46)
metallica<- data.frame(Name=metallicaNames, Age=metallicaAges)
metallica
metallica$Age
metallica$childAge<-c(12,12,4,6)
metallica
names(metallica)
metallica$fatherhoodAge<-metallica$Ages-metallica$childAge
names(metallica)
metallica$fatherhoodAge<-metallica$Ages & minus metallica$childAge
metallica$fatherhoodAge<-metallica$Ages - metallica$childAge
metallica$fatherhoodAge<- metallica$Age & minus metallica$childAge
q()
setwd("E:/Users/Guillaume/Documents/R/Project/Titanic/Data")
getwd()
library(boot) #Bootstrap
library(car) #Test dw et vif
train<-read.csv("train.csv", header = TRUE, sep = ",")
test<-read.csv("test.csv", header = TRUE, sep = ",")
train_knn<-train[,!names(train) %in%c("PassengerId","Survived", "Name")]
str(train_knn)
train_knn<-train[complete.cases(train_knn),]
str(train_knn)
test_knn<-test[,!names(test) %in%c("PassengerId", "Name")]
test_knn<-test[complete.cases(test_knn),]
knn_multivarie <- function(x_pred, x, y, k){
  m <- nrows(x_pred)
  predict_knn <- rep(0, m)
  for (i in 1:m) {
    dist <- sqrt(sum((x_pred[i, ] - x[i, ])^2))
    sort_index <- order(dist)    
    predict_knn[i] <- mean(y[sort_index[1:k]])    
  }
  return(predict_knn)
}
train_knn<-train[,!names(train) %in%c("PassengerId","Survived", "Name")]
str(train_knn)
train_knn<-train[complete.cases(train_knn),]
test_knn<-test[,!names(test) %in%c("PassengerId", "Name")]
str(test_knn)
test_knn<-test[complete.cases(test_knn),]
prev_test<-knn_multivarie (test_knn , train_knn,  train[,Survived], 10)
knn_multivarie <- function(x_pred, x, y, k){
  m <- nrow(x_pred)
  predict_knn <- rep(0, m)
  for (i in 1:m) {
    dist <- sqrt(sum((x_pred[i, ] - x[i, ])^2))
    sort_index <- order(dist)    
    predict_knn[i] <- mean(y[sort_index[1:k]])    
  }
  return(predict_knn)
}
prev_test<-knn_multivarie (test_knn , train_knn,  train[,Survived], 10)
knn_multivarie <- function(x_pred, x, y, k){
  m <- nrow(x_pred)
  predict_knn <- rep(0, m)
  for (i in 1:m) {
    dist <- sqrt(sum((x_pred[i, ] - x)^2))
    sort_index <- order(dist)    
    predict_knn[i] <- mean(y[sort_index[1:k]])    
  }
  return(predict_knn)
}
prev_test<-knn_multivarie (test_knn , train_knn,  train[,Survived], 10)
knn_multivarie <- function(x_pred, x, y, k){
  m <- nrow(x_pred)
  n<- nrow(x)
  predict_knn <- rep(0, m)
  for (i in 1:m) {
dist_vect <- rep(0, n)
for(j in 1:n) {
         dist_vect[j] <- rdist(x_pred[i,], x[j,])   
}
sort_index <- order(dist_vect)    
    predict_knn[i] <- mean(y[sort_index[1:k]])
  }
  return(predict_knn)
}
prev_test<-knn_multivarie (test_knn , train_knn,  train[,Survived], 10)
utils:::menuInstallPkgs()
library(boot) #Bootstrap
library(car) #Test dw et vif
library(fields)
knn_multivarie <- function(x_pred, x, y, k){
  m <- nrow(x_pred)
  n<- nrow(x)
  predict_knn <- rep(0, m)
  for (i in 1:m) {
dist_vect <- rep(0, n)
for(j in 1:n) {
         dist_vect[j] <- rdist(x_pred[i,], x[j,])   
}
sort_index <- order(dist_vect)    
    predict_knn[i] <- mean(y[sort_index[1:k]])
  }
  return(predict_knn)
}
prev_test<-knn_multivarie (test_knn , train_knn,  train[,Survived], 10)
prev_test<-knn_multivarie (test_knn , train_knn,  train$Survived, 10)
prev_test<-knn_multivarie (test_knn , train_knn,  train$Survived, 1)
warning()
warning()
warnings()
Warnings()
warnings()
q()
